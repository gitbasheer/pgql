graph TD
    Q1["<b>AddGEMSubscribers</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'gem.subscriberCount',<br/> 'links.addSubscribers'<br/> ])<br/> ))"]
    style Q1 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q2["<b>Task-Upgrade-RemoveAds</b><br/><br/>profile => {<br/> const {<br/> request: {<br/> query: {<br/> ventureId,<br/> appLocation<br/> } = {}<br/> } = {}<br/> } = profile || {};<br/> <br/> let tabPath = 'venture/upgrade/plan';<br/><br/> const entityData = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.websiteType',<br/> 'vnextAccount.billing.termType',<br/> 'vnextAccount.billing.autoRenew',<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'vnextAccount.ventureId'<br/> ])<br/> ));<br/> <br/> if(appLocation && appLocation === 'uvh-dashboard-website') {<br/> tabPath = 'venture/website/upgrade/plan';<br/> }<br/> <br/> if (ventureId) {<br/> return [{<br/> ...entityData[0],<br/> ventureId,<br/> tabPath<br/> }]<br/> }<br/> else {<br/> return [{<br/> ...entityData[0],<br/> ventureId: entityData[0].vnextAccount.ventureId,<br/> tabPath<br/> }]<br/> }<br/> <br/> return [];<br/>}"]
    style Q2 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q3["<b>AddMoreProducts</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current.commerce',<br/> 'vnextAccount.billing.commitment',<br/> 'features.published',<br/> 'links.olsAddProducts',<br/> 'ols.products.count',<br/> 'ols.setup_status',<br/> 'ols.store_status'<br/> ])<br/> ))"]
    style Q3 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q4["<b>Task-SubscriptionsCouponOrInsights</b><br/><br/>(profile) => {<br/> const site = profile.entities.find(<br/> ({<br/> type = '',<br/> features: {<br/> websiteType<br/> } = {}<br/> }) =><br/> type === 'wsbvnext' && websiteType === 'gocentral'<br/> );<br/> <br/> <br/> if(site) {<br/> const widgets = site.features?.widgets || [];<br/> const accountId = site.accountId;<br/> const path = widgets.includes('SUBSCRIBE') ? 'editsection' : 'addsection'<br/> return [{<br/> id: site.id,<br/> accountId: site.accountId,<br/> type: site.type,<br/> path<br/> }]<br/> }<br/><br/> return []<br/>};"]
    style Q4 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q5["<b>RAD Task-PromoteAppointmentService-EBVqroHvQ</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.websiteType',<br/> 'features.widgets',<br/> 'ola.service.total',<br/> 'gem.lastIgPostDate',<br/> 'gem.lastFbPostDate'<br/> ])<br/> ))"]
    style Q5 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q6["<b>ReadBlogging</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'blog',<br/> 'entitlementData.current.blog',<br/> 'features.published',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q6 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q7["<b>DoEmailGEMCampaign - Social Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q7 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q8["<b>Local-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q8 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q9["<b>AddHeaderImage</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.published',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q9 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q10["<b>GetNoticed-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q10 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q11["<b>AddLogo</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.userAddedLogo',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q11 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q12["<b>AddShopLocal</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId',<br/> 'customerIntentions',<br/> 'entitlementData',<br/> 'features.widgets',<br/> 'features.websiteType',<br/> 'ols.products.count'<br/> ])<br/> ))"]
    style Q12 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q13["<b>Task-ChatLearnMore</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q13 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q14["<b>SetupOLAPaymentsV2</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'accountId',<br/> 'customerIntentions',<br/> 'ola.online_payment.status',<br/> ])<br/> ))"]
    style Q14 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q15["<b>UploadYelpPhotos</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'id',<br/> 'features.yelp.hasYelpPublished'<br/> ])<br/> ))"]
    style Q15 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q16["<b>PostToFacebook-Holiday - Sales Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q16 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q17["<b>Add video to website</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q17 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q18["<b>DIFY Photo Shoot</b><br/><br/>profile => [{ type:\"none\", id:\"always\"}]"]
    style Q18 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q19["<b>Appointments-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q19 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q20["<b>Task-ConnectSocialChannels</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q20 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q21["<b>RAD Task-WaysToSell-VTk695TTb</b><br/><br/>profile => {<br/> const {<br/> request: {<br/> query: {<br/> ventureId<br/> } = {}<br/> } = {}<br/> } = profile || {};<br/> if (ventureId) {<br/> return [{<br/> id: 'none',<br/> type: 'always show',<br/> ventureId<br/> }];<br/> }<br/> <br/> return [];<br/>}"]
    style Q21 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q22["<b>FinishOLASetup</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'ola.account.status'<br/> ])<br/> ))"]
    style Q22 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q23["<b>AddOLAWidget</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'customerIntentions',<br/> 'entitlementData',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q23 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q24["<b>Facebook Booking feature in OLA</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => entityPick(entity, [<br/> 'id',<br/> 'accountId',<br/> 'type',<br/> 'entitlementData.current',<br/> 'entitlementData.transitionable',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'vnextAccount.shopperId',<br/> 'ola.service.total',<br/> 'ola.account.status',<br/> 'ola.facebook_booking.status'<br/> ]))"]
    style Q24 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q25["<b>DmFull-SocialEmail-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions',<br/> 'wsbvnext.features'<br/> ])<br/>})"]
    style Q25 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q26["<b>RAD Task-DIFY-n6n0grUBR</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId'<br/> ])<br/> ))"]
    style Q26 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q27["<b>DoFirstBlog - Site Visitors</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'id',<br/> 'blog',<br/> 'entitlementData.current',<br/> 'features.websiteType',<br/> 'links.composeCampaign'<br/> ])<br/> ))"]
    style Q27 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q28["<b>AddWidgetContent</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q28 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q29["<b>Add10MoreProducts</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current.commerce',<br/> 'links.olsAddProducts'<br/> ])<br/> ))"]
    style Q29 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q30["<b>AddBlogWidget</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.websiteType',<br/> 'features.widgets',<br/> 'links.blog'<br/> ])<br/> ))"]
    style Q30 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q31["<b>RAD Task-GoDaddyConversations-LoeR11kT~</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId',<br/> 'entitlementData.current.conversations',<br/> 'entitlementData.current[\"conversations.lite\"]'<br/> ])<br/> ))"]
    style Q31 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q32["<b>DoStartSEO </b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'sev.hasActivated',<br/> 'links.sev',<br/> 'vnextAccount.billing.commitment'<br/> ])<br/> ))"]
    style Q32 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q33["<b>Task-CustomizeChatWidget</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q33 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q34["<b>DoEmailGEMCampaign</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q34 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q35["<b>AddMarketplaceProducts - Orders Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q35 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q36["<b>AddWidgetContactUs</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.published',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q36 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q37["<b>SetupO365</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q37 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q38["<b>Task-ConnectSocialMediaChannels</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q38 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q39["<b>AddAppointments</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'customerIntentions',<br/> 'ola.service.total'<br/> ])<br/> ))"]
    style Q39 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q40["<b>PoyntSetup</b><br/><br/>(profile) => {<br/> const uceEntity = profile.entities.find(entity => entity.type === 'uce');<br/><br/> const siteWithCommerce = profile.entities.find(<br/> ({<br/> type = '',<br/> id = '',<br/> entitlementData: {<br/> current: {<br/> ucc<br/> } = {}<br/> } = {}<br/> }) => {<br/> const ols = uceEntity?.features?.ols;<br/> const status = ols?.status;<br/> const isProvisioned = id && status && status !== 'NOT_PROVISIONED';<br/> return type === 'wsbvnext' && isProvisioned<br/> }<br/> );<br/> <br/> <br/> if(siteWithCommerce) {<br/> const {<br/> features: {<br/> payments: {<br/> metadata: {<br/> processing_account: {<br/> businessId,<br/> paymentsEnabled,<br/> riskDecision,<br/> applicationStatus<br/> } = {}<br/> } = {}<br/> } = {}<br/> } = {}<br/> } = uceEntity || {};<br/> <br/> const isCompleted = !!(<br/> businessId ||<br/> paymentsEnabled ||<br/> (riskDecision && riskDecision !== \"PENDING\") ||<br/> (applicationStatus && applicationStatus !== \"INCOMPLETE\")<br/> );<br/><br/> return [{<br/> id: siteWithCommerce.id,<br/> type: siteWithCommerce.type,<br/> poyntLink: siteWithCommerce.links?.poyntSetup,<br/> isCompleted<br/> }]<br/> }<br/><br/> return []<br/>};"]
    style Q40 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q41["<b>ConnectGMB</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.gmb.hasGMBStarted',<br/> 'features.gmb.hasSubmittedToOneSpace',<br/> 'features.gmb.hasGMBOnlineBusiness',<br/> 'links.gmbLaunch',<br/> 'type',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'type',<br/> 'features.planType'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q41 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q42["<b>PostToFacebook - Sales Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q42 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q43["<b>Task-EnableWebsiteChatbot</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q43 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q44["<b>AddCustomDomain</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'domainName',<br/> 'features.externalDomainName',<br/> 'features.websiteType',<br/> 'vnextAccount.billing.commitment'<br/> ])<br/> ))"]
    style Q44 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q45["<b>Task-MO-Social-Post-Create</b><br/><br/>profile => {<br/> const vnextgraphEntity = profile.entities.find(e => e.type === 'vnextgraph');<br/> const wsbvnextEntity = profile.entities.find(e => e.type === 'wsbvnext');<br/> <br/> return [{<br/> id: wsbvnextEntity.id,<br/> type: wsbvnextEntity.type,<br/> ventureId: wsbvnextEntity.vnextAccount.ventureId<br/> }];<br/>}"]
    style Q45 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q46["<b>DoFirstBlog - Social Views</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q46 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q47["<b>ConnectYelp</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.yelp.hasCompletedYelpFlow',<br/> 'links.yelpLaunch',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'type',<br/> 'features.planType'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q47 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q48["<b>AddImportContacts</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'entitlementData',<br/> 'contacts'<br/> ])<br/> ))"]
    style Q48 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q49["<b>AddCustomDomain - Orders Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q49 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q50["<b>WriteAnotherBlog</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'blog',<br/> 'entitlementData.current.appointments',<br/> 'entitlementData.current.blog',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'ola.account.status',<br/> 'ola.service.total'<br/> ])<br/> ))"]
    style Q50 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q51["<b>RemovePlaceHolderText</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'links.editorDirect',<br/> 'customerIntentions'<br/> ])<br/> ))"]
    style Q51 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q52["<b>ProductsLocal-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q52 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q53["<b>Task-ConnectSocialAccounts</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId'<br/> ])<br/> ))"]
    style Q53 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q54["<b>DoStartSEO </b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q54 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q55["<b>AddBusinessInfo</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.websiteType',<br/> 'ola.service.total',<br/> 'ola.account.has_business_address'<br/> ])<br/> ))"]
    style Q55 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q56["<b>Task-AboutSection copy of editor/Task-AboutSection-rGj0ov19r</b><br/><br/>(profile) => {<br/> const site = profile.entities.find(<br/> ({<br/> type = '',<br/> features: {<br/> websiteType<br/> } = {}<br/> }) =><br/> type === 'wsbvnext' && websiteType === 'gocentral'<br/> );<br/><br/> if(site) {<br/> const widgets = site.features?.widgets || [];<br/> const accountId = site.accountId;<br/> const path = widgets.includes('ABOUT') ? 'editsection' : 'addsection';<br/> return [{<br/> id: site.id,<br/> accountId: site.accountId,<br/> type: site.type,<br/> path<br/> }]<br/> }<br/><br/> return []<br/>};"]
    style Q56 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q57["<b>AddProducts - Orders Tile</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'links.olsAddProducts',<br/> 'ols.products.count'<br/> ])<br/> ));"]
    style Q57 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q58["<b>PostProductOnFacebook</b><br/><br/>profile => {<br/> const {<br/> request: {<br/> query: {<br/> appLocation,<br/> ventureId<br/> } = {}<br/> } = {}<br/> } = profile || {};<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.facebook.pageId',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current',<br/> 'gem.lastFbPostDate',<br/> 'type',<br/> 'features.businessCategoryGroup'<br/> ])<br/> ));<br/><br/> <br/> const entities = joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/><br/> if (appLocation === 'uvh-dashboard' && ventureId && ventureId !== 'undefined') {<br/> return [{<br/> ...entities[0],<br/> appLocation,<br/> path: `/venture/composer/fb/product?ventureId=${ventureId}`,<br/> ventureId<br/> }];<br/> }<br/> return [{<br/> ...entities[0],<br/> appLocation,<br/> path: `/account/${entities[0].wsbvnext.accountId}/composer/fb/product`<br/> }];<br/>}"]
    style Q58 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q59["<b>HolidayTips</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.used',<br/> 'features.published',<br/> 'ols.products.count'<br/> ])<br/> ));"]
    style Q59 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q60["<b>SetupOLANotifications</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'accountId',<br/> 'customerIntentions',<br/> 'entitlementData',<br/> 'ola.account.status',<br/> 'ola.calendar_sync.status',<br/> 'ola.notifications.c1_sms'<br/> ])<br/> ))"]
    style Q60 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q61["<b>AddProducts - Sales Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q61 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q62["<b>Task-GetMobileApp</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q62 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q63["<b>BoostFacebookPost - Sales Tile</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current',<br/> 'features.businessCategory',<br/> 'type',<br/> 'gem.lastFbPostDate'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q63 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q64["<b>Task-ConnectEmail</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q64 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q65["<b>OLACalendarSyncV2</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'accountId',<br/> 'customerIntentions',<br/> 'entitlementData',<br/> 'ola.account.status',<br/> 'ola.calendar_sync.status',<br/> 'ola.service.total'<br/> ])<br/> ))"]
    style Q65 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q66["<b>ListService</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.websiteType',<br/> 'ola.service.total'<br/> ])<br/> ))"]
    style Q66 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q67["<b>UpdateHours</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'mktgasst.features.facebook.isConnected',<br/> 'mktgasst.features.gmb.hasGMBPublished',<br/> 'mktgasst.features.yelp.hasYelpPublished',<br/> ])<br/>})"]
    style Q67 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q68["<b>ProductsApptsLocal-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q68 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q69["<b>PostToFacebook-Holiday - Social Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q69 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q70["<b>DoEmailGEMCampaign</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'gem.hasSent',<br/> 'gem.subscriberCount',<br/> 'links.composeCampaign',<br/> 'features.planType'<br/> ])<br/> ))"]
    style Q70 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q71["<b>DmFull-Social-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions',<br/> 'wsbvnext.features'<br/> ])<br/>})"]
    style Q71 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q72["<b>ConnectGoogleChannel</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'type',<br/> 'features.published',<br/> 'entitlementData.current',<br/> 'ols.products.count',<br/> 'links.olsMarketplace',<br/> 'account.planType'<br/> ])<br/> ));"]
    style Q72 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q73["<b>DIFY-placeholderguidance group</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> ])<br/> ));"]
    style Q73 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q74["<b>AddPhotoGallery</b><br/><br/>profile => {<br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.widgets',<br/> 'features.websiteType',<br/> 'type',<br/> 'features.planType'<br/> ])<br/> ));<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.facebook.isConnected',<br/> 'features.facebook.pageId',<br/> 'features.gmb.hasGMBPublished',<br/> 'features.yelp.hasYelpPublished',<br/> 'type'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q74 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q75["<b>Task-Upgrade-GetSEO</b><br/><br/>profile => {<br/> const {<br/> request: {<br/> query: {<br/> ventureId,<br/> appLocation<br/> } = {}<br/> } = {}<br/> } = profile || {};<br/> <br/> let tabPath = 'venture/upgrade/plan';<br/><br/> const entityData = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.websiteType',<br/> 'vnextAccount.billing.termType',<br/> 'vnextAccount.billing.autoRenew',<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'vnextAccount.ventureId'<br/> ])<br/> ));<br/> <br/> if(appLocation && appLocation === 'uvh-dashboard-website') {<br/> tabPath = 'venture/website/upgrade/plan';<br/> }<br/> <br/> if (ventureId) {<br/> return [{<br/> ...entityData[0],<br/> ventureId,<br/> tabPath<br/> }]<br/> }<br/> else {<br/> return [{<br/> ...entityData[0],<br/> ventureId: entityData[0].vnextAccount.ventureId,<br/> tabPath<br/> }]<br/> }<br/> <br/> return [];<br/>}"]
    style Q75 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q76["<b>PostProductOnFacebook - Orders Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q76 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q77["<b>Task-DIYSocialAds-Google</b><br/><br/>profile => [{ type:\"none\", id:\"always\"}]"]
    style Q77 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q78["<b>AddShop</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId',<br/> 'customerIntentions',<br/> 'entitlementData',<br/> 'features.widgets',<br/> 'features.websiteType',<br/> 'ols.products.count'<br/> ])<br/> ))"]
    style Q78 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q79["<b>ProductReviewsOn</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'accountId',<br/> 'entitlementData',<br/> 'ols.features_enabled.product_reviews'<br/> ])<br/> ))"]
    style Q79 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q80["<b>Add download widget to website</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q80 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q81["<b>Task-DIFY-Tier0RequestACall</b><br/><br/>profile => <br/> joinEntities(profile.entities, entity => entity.type === 'wsbvnext') <br/> .map(entity => entityPick(entity, ['wsbvnext.features.published', 'id', 'accountId', 'wsbvnext.entitlementData.current.website', 'wsbvnext.id', 'wsbvnext.type', 'wsbvnext.accountId','wsbvnext.features.planType']))"]
    style Q81 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q82["<b>AddMoreServicesOLA</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current.appointments',<br/> 'vnextAccount.billing.commitment',<br/> 'features.websiteType',<br/> 'ola.account.status'<br/> ])<br/> ))"]
    style Q82 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q83["<b>Task-OptimizeSEOKeywords</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'sev.hasActivated',<br/> 'links.sev',<br/> 'vnextAccount.billing.commitment'<br/> ])<br/> ))"]
    style Q83 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q84["<b>ReadFBPractices</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.facebook.pageId',<br/> 'features.facebook.socialWidgetData.pageURL',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'type'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q84 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q85["<b>C19EmailMarketing</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions',<br/> 'wsbvnext.features',<br/> 'wsbvnext.accountCreationListingId'<br/> ])<br/>})"]
    style Q85 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q86["<b>SetupOLSShipping</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'links.olsAddShipping'<br/> ])<br/> ));"]
    style Q86 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q87["<b>EmailSubscriberWebformC19</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'gem.hasSent',<br/> 'gem.subscriberCount',<br/> 'links.composeCampaign',<br/> 'features.planType'<br/> ])<br/> ))"]
    style Q87 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q88["<b>BoostFacebookPost - Social Views</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q88 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q89["<b>SetupO365</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q89 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q90["<b>ProductsGoal-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q90 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q91["<b>PostToFacebook - Social Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q91 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q92["<b>UploadSocialPhotosV2</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'mktgasst.features.facebook.isConnected',<br/> 'mktgasst.features.gmb.hasGMBPublished',<br/> 'mktgasst.features.yelp.hasYelpPublished',<br/> 'mktgasst.features.yelp.hasYelpApprovedClaim',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type'<br/> ])<br/>})"]
    style Q92 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q93["<b>RAD Task-AddAboutUs-liZueQkbU</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q93 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q94["<b>Task-CustomizeWebChat</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q94 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q95["<b>Task-UploadImages copy of editor/Task-UploadImages-UwqChf4FO</b><br/><br/>(profile) => {<br/> const site = profile.entities.find(<br/> ({<br/> type = '',<br/> features: {<br/> websiteType<br/> } = {}<br/> }) =><br/> type === 'wsbvnext' && websiteType === 'gocentral'<br/> );<br/> <br/> <br/> if(site) {<br/> const widgets = site.features?.widgets || [];<br/> const accountId = site.accountId;<br/> const path = widgets.includes('GALLERY') ? 'editsection' : 'addsection'<br/> return [{<br/> id: site.id,<br/> accountId: site.accountId,<br/> type: site.type,<br/> path<br/> }]<br/> }<br/><br/> return []<br/>};"]
    style Q95 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q96["<b>DIFY-CompleteSocialAd</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> ])<br/> ));"]
    style Q96 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q97["<b>AddMarketplaces</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'accountId',<br/> 'entitlementData',<br/> 'links.olsMarketplace',<br/> 'ols.marketplace_data',<br/> 'ols.products.count',<br/> 'vnextAccount.billing.commitment'<br/> ])<br/> ))"]
    style Q97 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q98["<b>SetupOLS</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'blog',<br/> 'entitlementData.current.commerce',<br/> 'ols.setup_status'<br/> ])<br/> ))"]
    style Q98 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q99["<b>DIFY-RequestSiteEdit</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> 'features.planType'<br/> ])<br/> ));"]
    style Q99 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q100["<b>AddMarketplaces - Orders Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q100 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q101["<b>Add video to website</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q101 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q102["<b>GetNoticedLocal-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.features.published',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q102 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q103["<b>ConnectGoogleChannel - Sales Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q103 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q104["<b>DIYSocialAds - Social Views</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q104 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q105["<b>Add menu widget to website</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId',<br/> 'features.widgets',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q105 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q106["<b>Task-AddContactUs</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q106 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q107["<b>PostToFacebook-Holiday</b><br/><br/>profile => {<br/> const {<br/> request: {<br/> query: {<br/> appLocation,<br/> ventureId<br/> } = {}<br/> } = {}<br/> } = profile || {};<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.facebook.pageId',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current',<br/> 'gem.lastFbPostDate',<br/> 'type',<br/> 'features.businessCategoryGroup'<br/> ])<br/> ));<br/> <br/> const entities = joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/><br/> if (appLocation === 'uvh-dashboard' && ventureId && ventureId !== 'undefined') {<br/> return [{<br/> ...entities[0],<br/> appLocation,<br/> path: `/venture/composer/over?ventureId=${ventureId}&overSearchTerm=holiday+season`,<br/> ventureId<br/> }];<br/> }<br/> <br/> return [{<br/> ...entities[0],<br/> appLocation,<br/> path: `/account/${entities[0].wsbvnext.accountId}/composer/over?overSearchTerm=holiday+season`<br/> }];<br/>}"]
    style Q107 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q108["<b>CreateYelpAds</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.yelp.hasCompletedYelpFlow',<br/> 'links.yelpLaunch',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'type',<br/> 'features.planType'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q108 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q109["<b>PublishStore </b><br/><br/>(profile) => {<br/> const uceEntity = profile.entities.find(entity => entity.type === 'uce');<br/> <br/> const siteWithCommerce = profile.entities.find(<br/> ({<br/> type = '',<br/> id = '',<br/> entitlementData: {<br/> current: {<br/> ucc<br/> } = {}<br/> } = {},<br/> customerIntentions: {<br/> 'onlineStore.channel.ols': olsIntent,<br/> 'onlineStore.channel.inPerson': inPersonIntent,<br/> preloaded: {<br/> 'onlineStore.channel.ols': olsIntentPreloaded,<br/> 'onlineStore.channel.inPerson': inPersonIntentPreloaded<br/> } = {}<br/> } = {}<br/> }) => {<br/> const hasOLSIntent = olsIntent || olsIntentPreloaded;<br/> const hasInPersonIntent = inPersonIntent || inPersonIntentPreloaded;<br/> const ols = uceEntity?.features?.ols;<br/> const status = ols?.status;<br/> const isProvisioned = id && status && status !== 'NOT_PROVISIONED';<br/> const skipProvisionCheck = hasInPersonIntent && !hasOLSIntent;<br/> return type === 'wsbvnext' && (hasOLSIntent || (!skipProvisionCheck && isProvisioned))<br/> }<br/> );<br/> <br/> <br/> if(siteWithCommerce) {<br/> return [{<br/> id: siteWithCommerce.id,<br/> type: siteWithCommerce.type,<br/> websiteId: siteWithCommerce.id,<br/> features: {<br/> published: siteWithCommerce.features?.published<br/> }<br/> }]<br/> }<br/><br/> return []<br/>};"]
    style Q109 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q110["<b>Task-ConnectSocialAccounts</b><br/><br/>profile => {<br/> return profile.entities<br/> .filter(entity => entity.type === 'vnextgraph')<br/> .map(entity => {<br/> const entitlements = entity.entitlementData?.current;<br/><br/> const isCompleted = (<br/> entitlements?.['socialMediaManager.fb.connect'] === true ||<br/> entitlements?.['socialMediaManager.gmb.connect'] === true ||<br/> entitlements?.['socialMediaManager.yelp.connect'] === true ||<br/> entitlements?.['socialMediaManager.instagram'] === true ||<br/> entitlements?.['socialMediaManager.twitter'] === true<br/> );<br/><br/> return {<br/> type: entity.type,<br/> id: entity.data?.website?.id || '',<br/> accountId: entity.data?.website?.accountId || '',<br/> status: isCompleted ? 'completed' : 'incomplete',<br/> score: isCompleted ? 0 : 10,<br/> entitlements: entitlements<br/> };<br/> });<br/>}"]
    style Q110 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q111["<b>SellInPerson</b><br/><br/>module.exports = (profile) => {<br/> const uceEntity = profile.entities.find(entity => entity.type === 'uce');<br/><br/> const siteWithCommerce = profile.entities.find(<br/> ({<br/> type = '',<br/> id = '',<br/> entitlementData: {<br/> current: {<br/> ucc<br/> } = {}<br/> } = {},<br/> }) => {<br/> const ols = uceEntity && uceEntity.features && uceEntity.features.ols;<br/> const status = ols && ols.status;<br/> const isProvisioned = id && status && status !== 'NOT_PROVISIONED';<br/> return type === 'wsbvnext' && isProvisioned;<br/> }<br/> );<br/><br/> if (siteWithCommerce) {<br/> return [{<br/> id: siteWithCommerce.id,<br/> type: siteWithCommerce.type,<br/> websiteId: siteWithCommerce.id,<br/> commerceSellInPersonLink: siteWithCommerce ?.links ?.commerceSellInPerson,<br/> uceTerminals: uceEntity ?.features ?.payments ?.metadata ?.terminals<br/> }]<br/> };<br/> <br/> return [];<br/>};"]
    style Q111 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q112["<b>SetupOLSCoupons</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'accountId',<br/> 'customerIntentions',<br/> 'entitlementData',<br/> 'features.published'<br/> ])<br/> ))"]
    style Q112 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q113["<b>AbandonedCartOn</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'ols.features_enabled.abandoned_cart',<br/> 'entitlementData.current.commerce'<br/> ])<br/> ))"]
    style Q113 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q114["<b>PublishWebsiteV2</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'links.preview',<br/> 'links.editorDirect'<br/> ])<br/> ))"]
    style Q114 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q115["<b>UploadGMBPhotos</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.gmb.hasGMBPublished',<br/> 'features.gmb.photos.counts',<br/> 'links.gmbLaunchPhotos',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'type'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q115 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q116["<b>AppointmentsLocal-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q116 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q117["<b>ConnectFacebook</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.facebook.isConnected',<br/> 'features.facebook.pageId',<br/> 'links.fbPageCreate',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'type',<br/> 'features.planType'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q117 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q118["<b>HolidayTips</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q118 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q119["<b>ConnectInstagram</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.entitlementData.current',<br/> 'mktgasst.features.instagram.isConnected',<br/> 'wsbvnext.features.planType'<br/> ])<br/>})"]
    style Q119 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q120["<b>ImportSubscribersC19</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'gem.subscriberCount',<br/> 'links.addSubscribers',<br/> 'id',<br/> 'features.planType'<br/> ])<br/> ))"]
    style Q120 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q121["<b>PostProductOnGMB</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.gmb.hasGMBLocation',<br/> 'features.gmb.hasGMBPublished',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'accountId',<br/> 'entitlementData.current',<br/> 'features.published',<br/> 'ols.featured_products_with_images',<br/> 'type'<br/> ])<br/> <br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q121 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q122["<b>DIFY-RequestSocialPost</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> ])<br/> ));"]
    style Q122 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q123["<b>DmFull-SocialLocal-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions',<br/> 'wsbvnext.features'<br/> ])<br/>})"]
    style Q123 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q124["<b>DmFull-SocialLocalEmail-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions',<br/> 'wsbvnext.features'<br/> ])<br/>})"]
    style Q124 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q125["<b>ProductsAppts-1</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'mktgasst.id',<br/> 'mktgasst.type',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.customerIntentions'<br/> ])<br/>})"]
    style Q125 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q126["<b>Task-Marketing-Checklist</b><br/><br/>profile => {<br/> const {<br/> request: {<br/> query: {<br/> ventureId<br/> } = {}<br/> } = {}<br/> } = profile || {};<br/> if (ventureId) {<br/> return [{<br/> id: 'none',<br/> type: 'always show',<br/> ventureId<br/> }];<br/> }<br/> <br/> return [];<br/>}"]
    style Q126 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q127["<b>AddMarketplaceProducts</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'accountId',<br/> 'entitlementData',<br/> 'links.olsMarketplace',<br/> 'ols.marketplace_data'<br/> ])<br/> ))"]
    style Q127 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q128["<b>FirstEmailCampaignC19</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'gem.hasSent',<br/> 'gem.subscriberCount',<br/> 'links.composeCampaign',<br/> 'features.planType'<br/> ])<br/> ))"]
    style Q128 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q129["<b>Task-FacebookAds-Direct</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.facebook.isConnected',<br/> 'features.facebook.pageId',<br/> 'links.fbAdsDirect',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'features.published',<br/> 'features.websiteType',<br/> 'type'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q129 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q130["<b>AddSocialLinksWidget</b><br/><br/>profile => {<br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.widgets',<br/> 'features.websiteType',<br/> 'type'<br/> ])<br/> ));<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'features.facebook.isConnected',<br/> 'features.facebook.pageId',<br/> 'features.gmb.hasGMBPublished',<br/> 'features.yelp.hasYelpPublished',<br/> 'type',<br/> 'features.planType'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q130 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q131["<b>PostToFacebook</b><br/><br/>profile => {<br/> const {<br/> request: {<br/> query: {<br/> appLocation,<br/> ventureId<br/> } = {}<br/> } = {}<br/> } = profile || {};<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'type'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current',<br/> 'type',<br/> 'gem.lastIgPostDate',<br/> 'gem.lastFbPostDate',<br/> 'features.planType'<br/> ])<br/> ));<br/> <br/> const entities = joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/><br/> if (appLocation === 'uvh-dashboard' && ventureId && ventureId !== 'undefined') {<br/> return [{<br/> ...entities[0],<br/> appLocation,<br/> path: `/venture/composer/fb/website?ventureId=${ventureId}`,<br/> ventureId<br/> }];<br/> }<br/><br/> return [{<br/> ...entities[0],<br/> appLocation,<br/> path: `/account/${entities[0].wsbvnext.accountId}/composer/fb/website`<br/> }];<br/>}"]
    style Q131 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q132["<b>Task-ConnectYourEmail</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q132 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q133["<b>DIYSocialAds</b><br/><br/>profile => {<br/><br/> const mktgasst = profile.entities<br/> .filter(entity => entity.type === 'mktgasst')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'type',<br/> 'features.facebook.isConnected'<br/> ])<br/> ));<br/><br/> const wsbVnext = profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData.current',<br/> 'features.businessCategory',<br/> 'type'<br/> ])<br/> ));<br/><br/> return joinEntities(mktgasst, wsbVnext, (a, b) => (<br/> a.type === 'mktgasst' && b.type === 'wsbvnext' && a.id === b.accountId<br/> ));<br/>}"]
    style Q133 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q134["<b>SetupO365</b><br/><br/>profile => joinEntities(profile.entities, profile.entities, (a, b) => (<br/> a.type === 'wsbvnext' && b.type === 'o365' && a?.vnextAccount?.shopperId === b?.shopper?.shopperId<br/>)).map(entity => {<br/> return entityPick(entity, [<br/> 'o365.id',<br/> 'o365.shopper.shopperId',<br/> 'o365.states.activated',<br/> 'wsbvnext.accountId',<br/> 'wsbvnext.features.id',<br/> 'wsbvnext.features.websiteType',<br/> 'wsbvnext.id',<br/> 'wsbvnext.type',<br/> 'wsbvnext.vnextAccount.billing.commitment',<br/> 'wsbvnext.vnextAccount.shopperId'<br/> ])<br/>})"]
    style Q134 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q135["<b>Task-NeverMissMessage</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q135 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q136["<b>ConnectGMB - Appointments Tile</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q136 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q137["<b>Task-ContactSection copy of editor/Task-ContactSection-mvjt_1kC6</b><br/><br/>(profile) => {<br/> const site = profile.entities.find(<br/> ({<br/> type = '',<br/> features: {<br/> websiteType<br/> } = {}<br/> }) =><br/> type === 'wsbvnext' && websiteType === 'gocentral'<br/> );<br/> <br/> <br/> if(site) {<br/> const widgets = site.features?.widgets || [];<br/> const accountId = site.accountId;<br/> const path = widgets.includes('CONTACT') ? 'editsection' : 'addsection'<br/> return [{<br/> id: site.id,<br/> accountId: site.accountId,<br/> type: site.type,<br/> path <br/> }]<br/> }<br/><br/> return []<br/>};"]
    style Q137 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q138["<b>AddProductsLocal</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'entitlementData',<br/> 'links.olsAddProducts',<br/> 'ols.products.count'<br/> ])<br/> ));"]
    style Q138 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q139["<b>SetupOLSPayment</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'vnextAccount.account.paymentStatus',<br/> 'vnextAccount.billing.commitment',<br/> 'accountId',<br/> 'entitlementData',<br/> 'links.olsAddPayment',<br/> 'ols.payment_methods.available'<br/> ])<br/> ))"]
    style Q139 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q140["<b>Task-HeaderCTAtoContact</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'id',<br/> 'accountId'<br/> ])<br/> ))"]
    style Q140 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q141["<b>ChooseTheme</b><br/><br/>profile => profile.entities<br/> .filter(entity => entity.type === 'wsbvnext')<br/> .map(entity => (<br/> entityPick(entity, [<br/> 'accountId',<br/> 'features.websiteType'<br/> ])<br/> ))"]
    style Q141 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q142["<b>PublishWebsiteV2</b><br/><br/>profile => {<br/> return [];<br/>}"]
    style Q142 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q143["<b>ExploreHub</b><br/><br/>(profile) => {<br/> const uceEntity = profile.entities.find(entity => entity.type === 'uce');<br/><br/> const siteWithCommerce = profile.entities.find(<br/> ({<br/> type = '',<br/> id = '',<br/> entitlementData: {<br/> current: {<br/> ucc<br/> } = {}<br/> } = {}<br/> }) => {<br/> const ols = uceEntity?.features?.ols;<br/> const status = ols?.status;<br/> const isProvisioned = id && status && status !== 'NOT_PROVISIONED';<br/> return type === 'wsbvnext' && isProvisioned;<br/> }<br/> );<br/> <br/> <br/> if(siteWithCommerce) {<br/> return [{<br/> id: siteWithCommerce.id,<br/> type: siteWithCommerce.type,<br/> commerceHubLink: siteWithCommerce.links?.commerceHub<br/> }]<br/> }<br/><br/> return []<br/>};"]
    style Q143 fill:#f9f9f9,stroke:#333,stroke-width:2px
    Q144["<b>Task-ViewMySubscribers</b><br/><br/>(profile) => {<br/> const site = profile.entities.find(<br/> ({<br/> type = '',<br/> features: {<br/> websiteType<br/> } = {}<br/> }) =><br/> type === 'wsbvnext' && websiteType === 'gocentral'<br/> );<br/> <br/> if(site) {<br/> const ventureId = site.vnextAccount?.ventureId;<br/> return [{<br/> id: ventureId,<br/> ventureId: ventureId,<br/> type: 'projects'<br/> }]<br/> }<br/><br/> return [{<br/> id: '0',<br/> type: 'error'<br/> }]<br/>};"]
    style Q144 fill:#f9f9f9,stroke:#333,stroke-width:2px
